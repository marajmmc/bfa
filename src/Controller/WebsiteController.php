<?php
namespace App\Controller;

use App\Controller\AppController;
use Cake\Cache\Cache;
use Cake\ORM\TableRegistry;

/**
 * Dashborad Controller
 *
 * @property \App\Model\Table\DashboradTable $Dashborad
 */
class WebsiteController extends AppController
{
    public $paginate = [
        'limit' => 12
    ];
    public function initialize()
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->Auth->allow();
    }

    /**
     * Index method
     *
     * @return void
     */
    public function index()
    {
        $this->viewBuilder()->layout('website');
        $All_moviesTbl =  TableRegistry::get('movies');
        $all_movies = $All_moviesTbl->find();
        $this->set('all_movies',$this->paginate($all_movies));
    }
    public function details($id)
    {
        $this->viewBuilder()->layout('website');
        $moviesTbl =  TableRegistry::get('movies');
        $movie = $moviesTbl->find();
        $movie->where(['NUM'=>$id]);
        $this->set(compact('movie'));

    }
    public function searchMovie()
    {
        $inpt = $this->request->query;
        $this->viewBuilder()->layout('website');
        $moviesTbl =  TableRegistry::get('movies');
        $movies = $moviesTbl->find();
        // check conditions
            if(isset($inpt['category']) && $inpt['category'])
                $movies->where(['CATEGORY'=>$inpt['category']]);
            if(isset($inpt['string']) && $inpt['string']){
                if(is_numeric($inpt['string']))
                    $movies->where(['YEAR'=>$inpt['string']]);
                else
                    $movies->where(['ORIGINALTITLE LIKE'=>$inpt['string'].'%']);

            }
            if(isset($inpt['directors']) && $inpt['movie_type'])
                $movies->where(['DIRECTOR LIKE'=>isset($inpt['directors'])]);

            if(isset($inpt['movie_type']) && $inpt['movie_type'])
                $movies->where(['MOVIE_TYPE LIKE'=>isset($inpt['movie_type'])]);

        $this->set('movies',$this->paginate($movies));
    }

    public function searchMovieCategory($category)
    {
        $this->viewBuilder()->layout('website');
        echo $category;
    }

    public function getMovies()
    {
        $qString = $this->request->data('qstring');

        $movies = TableRegistry::get('movies')->find();
        $movies->select(['label'=>'ORIGINALTITLE']);

        if(is_int($qString)):
            $movies->Where(['YEAR like' => $qString . '%']);
        else:
            $movies->where(['ORIGINALTITLE like' => $qString . '%']);
        endif;

        $this->response->body(json_encode($movies));
        return $this->response;
    }
}
